"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7k27)&d89*=quz(n5m+k=cjvt$*)5akuo^rhg1tyww4)ybk^(l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

SITE_ID = 1


# Application definition

INSTALLED_APPS = [
    'simpleui',
    'account.apps.AccountConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog.apps.BlogConfig',
    'DjangoUeditor',
    'taggit',
    'back_stage.apps.BackStageConfig',
    'casbin_adapter.apps.CasbinAdapterConfig',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.postgres',#全文搜索用
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'mysite',        
        'USER': 'postgres',
        'PASSWORD': 'cc',        
        'HOST': '192.168.0.23',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-Hans'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = 'static/'
STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



#当运行 python manage.py collectstatic 的时候
#STATIC_ROOT文件夹是用来将所有STATICRTFILES_DIRS中所有文件夹中的文件，以及各app中static中的文件都复制过来
#把这些文件放在一起，是为了用apache等部署的时候方便使用
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

#其它存放静态文件的文件夹，可以用来存放项目中共用的静态文件，里面不能包含STATIC_ROOT
#如果不想使用STATICFILES_DIRS 可以不用，都放在app里的static中也可以
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "common_static"),
    #'/path/to/others/static/',  # 用不到的时候可以不写这一行
)


# 这个是默认设置，Django 默认会在 STATICFILES_DIRS中的文件夹 和 各app下的static文件夹中找文件
# 注意有先后顺序，找到了就不再继续找了
STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder"
)




# 由于我们要允许用户上传图片，必须配置Django让其提供媒体文件服务，在settings.py中加入下列内容：
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#模拟邮箱，没有配置好邮箱时用这个做实验，会在命令窗里显示发送的邮件内容
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

#下面用的465端口，阿里云可以用的
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'chen320821@163.com' # 帐号
# EMAIL_HOST_PASSWORD =  'angela123.163'  # 密码
EMAIL_HOST_PASSWORD =  'CZZLYIRGEDHOTHWA'  # 密码
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# 如果没有指定next参数，登录成功后重定向的URL
LOGIN_REDIRECT_URL = 'dashboard'
# 用户需要登录的情况下被重定向到的URL地址（例如@login_required重定向到的地址）
LOGIN_URL = 'login'
# 用户需要登出的时候被重定向到的URL地址
LOGOUT_URL = 'logout'


CASBIN_MODEL = os.path.join(BASE_DIR, 'casbin.conf')




# <---------------------------------------------------simpleui--------------------------------------------------------->
# 隐藏simpleui主页信息
SIMPLEUI_HOME_INFO = False

# 自定义SIMPLEUI的Logo
# SIMPLEUI_LOGO = 'https://avatars2.githubusercontent.com/u/13655483?s=60&v=4'
# simpleui修改logo
# 如果需要使用本地图片，需要在Lib/site-packages/simpleui/static/admin/simpleui-x/img中把原来的logo.png替换掉（图片名称不要改变）。


# 设置默认主题
SIMPLEUI_DEFAULT_THEME = 'admin.lte.css'







# 修改默认首页
# SIMPLEUI_HOME_PAGE = 'http://127.0.0.1:8000/back_stage/'
SIMPLEUI_HOME_PAGE = '../blog/'
SIMPLEUI_HOME_TITLE = '看板'
SIMPLEUI_HOME_ICON = 'fa-solid fa-gauge'


# 设置simpleui 点击首页图标跳转的地址；首页顶部首页图标默认跳转地址为/，即根目录；
# SIMPLEUI_INDEX = 'https://www.88cto.com'









# 'http://127.0.0.1:8000/admin/#/admin/job/job/'
SIMPLEUI_CONFIG = {
    #system_keep 保留系统菜单,该字段用于告诉simpleui，是否需要保留系统默认的菜单，默认为False，不保留。 如果改为True，自定义和系统菜单将会并存
    'system_keep': True,
    # menu_display过滤显示菜单和排序功能,该字段用于告诉simpleui，是否需要开启过滤显示菜单和排序功能。
    # 默认可以不用填写，缺省配置为默认排序，不对菜单进行过滤和排序。
    # 开启认为传一个列表，如果列表为空，则什么也不显示。列表中的每个元素要对应到menus里面的name字段
    'menu_display': ['博客','用户信息', '权限认证','站点'],
    #dynamic 开启动态菜单功能,该字段用于告诉simpleui，是否需要开启动态菜单功能。
    # 默认可以不用填写，缺省配置为False，不开启动态菜单功能。开启为True，开启后，每次用户登陆都会刷新左侧菜单配置。
    # 需要注意的是：开启后每次访问admin都会重读配置文件，所以会带来额外的消耗。
    'dynamic': True,    # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时动态展示菜单内容
    # menus,如果SIMPLEUI_CONFIG中存在menus字段，将会覆盖系统默认菜单。并且menus中输出的菜单不会受权限控制。
    'menus':
        [
            {
                'app': 'blog',
                'name': '博客',
                'icon': 'fa-solid fa-list',
                'models': [
                    {
                        'name': '博客管理',
                        'icon': 'fa-solid fa-list',
                        'url': '/admin/blog/post/'
                    },
                    {
                        'name': '评论管理',
                        'icon': 'fa-solid fa-laptop-code',
                        'url': '/admin/blog/comment/'
                    }
                ]
            },            

            {
                'app': 'account',
                'name': '用户信息',
                'icon': 'fa-regular fa-user',
                'models': [
                    {
                        'name': '用户信息',
                        'icon': 'fa fa-user',
                        'url': '/admin/account/profile/'
                    },
                    

                ]
            },



            {
                'app': 'auth',
                'name': '权限认证',
                'icon': 'fas fa-user-shield',
                'models':
                    [
                        {
                            'name': '组',
                            'icon': 'fa fa-user',
                            'url': 'auth/group/'
                        },
                        {
                            'name': '用户',
                            'icon': 'fa fa-user',
                            'url': 'auth/user/'
                        },
                    ]
            },


        ]


}


# <---------------------------------------------------simpleui--------------------------------------------------------->
